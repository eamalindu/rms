package lk.steam.rms.controller;

import lk.steam.rms.dao.PaymentPlanDAO;
import lk.steam.rms.entity.Lesson;
import lk.steam.rms.entity.PaymentPlan;
import lk.steam.rms.entity.Privilege;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.web.bind.annotation.*;

import java.time.LocalDateTime;
import java.util.List;

@RestController
@RequestMapping(value = "/PaymentPlan")
public class PaymentPlanController {
    @Autowired
    private PaymentPlanDAO paymentPlanDAO;
    @Autowired
    private PrivilegeController privilegeController;

    @GetMapping(value = "/findall",produces = "application/json")
    public List<PaymentPlan> findAll(){
        return paymentPlanDAO.findAll();
    }

    @GetMapping(value = "/getActivePlans/{courseId}",produces = "application/json")
    public List<PaymentPlan> getPaymentPlanByCourseID(@PathVariable Integer courseId){
        return  paymentPlanDAO.getPaymentPlanByCourseID(courseId);
    }

    @PostMapping
    public String save(@RequestBody PaymentPlan paymentPlan){
        Authentication auth = SecurityContextHolder.getContext().getAuthentication();
        Privilege loggedUserPrivilege = privilegeController.getPrivilegeByUserAndModule(auth.getName(),"BATCH");

        if(!loggedUserPrivilege.getInsertPrivilege()){
            return "<br>User does not have sufficient privilege.";
        }

        try {
            //set autogenerated values
            paymentPlan.setStatus(true);
            paymentPlan.setType(true);
            paymentPlan.setTimestamp(LocalDateTime.now());
            paymentPlan.setCreatedBy(auth.getName());

            paymentPlanDAO.save(paymentPlan);
            return "OK";
        }
        catch (Exception ex){
            return "Save Failed! <br>"+ex.getMessage();
        }
    }
}
